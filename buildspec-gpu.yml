version: 0.2

env:
  variables:
    FRAMEWORK_VERSION: '1.6.0'
    EIA_FRAMEWORK_VERSION: '1.4.1'
    GPU_INSTANCE_TYPE: 'ml.p2.xlarge'
    EI_ACCELERATOR_TYPE: 'ml.eia1.medium'
    ECR_REPO: 'sagemaker-test'
    DLC_ACCOUNT: '763104351884'
    DAEMON_JSON: '{"storage-driver": "overlay2", "storage-opts": [ "overlay2.size=20G" ]}'

phases:
  pre_build:
    commands:
      - start-dockerd
      - ACCOUNT=$(aws --region $AWS_DEFAULT_REGION sts --endpoint-url https://sts.$AWS_DEFAULT_REGION.amazonaws.com get-caller-identity --query 'Account' --output text)
      - PREPROD_IMAGE="$ACCOUNT.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPO"
      - PR_NUM=$(echo $CODEBUILD_SOURCE_VERSION | grep -o '[0-9]\+')
      - BUILD_ID="$(echo $CODEBUILD_BUILD_ID | sed -e 's/:/-/g')"
      - echo 'Pull request number:' $PR_NUM '. No value means this build is not from pull request.'

  build:
    commands:
      - TOX_PARALLEL_NO_SPINNER=1
      - PY_COLORS=0

      # define tags
      - DLC_GPU_TAG="$FRAMEWORK_VERSION-dlc-gpu-$BUILD_ID"

      # TODO: remove these debugging commands
      - df -H
      - docker info
      - service docker stop
      - echo $DAEMON_JSON > /etc/docker/daemon.json
      - cat /etc/docker/daemon.json
      - service docker start
      - docker info

      # build GPU images
      - python3.6 setup.py sdist
      - build_dir="test/container/$FRAMEWORK_VERSION"
      - $(aws ecr get-login --registry-ids $DLC_ACCOUNT --no-include-email --region $AWS_DEFAULT_REGION)
      - docker build -f "$build_dir/Dockerfile.dlc.gpu" -t $PREPROD_IMAGE:$DLC_GPU_TAG --build-arg region=$AWS_DEFAULT_REGION .

      # push images to ECR
      - $(aws ecr get-login --registry-ids $ACCOUNT --no-include-email --region $AWS_DEFAULT_REGION)
      - docker push $PREPROD_IMAGE:$DLC_GPU_TAG

      # run GPU local integration tests
      - test_cmd="IGNORE_COVERAGE=- tox -e py36 -- test/integration/local --region $AWS_DEFAULT_REGION --docker-base-name $ECR_REPO --aws-id $ACCOUNT --framework-version $FRAMEWORK_VERSION --processor gpu --tag $DLC_GPU_TAG"
      - execute-command-if-has-matching-changes "$test_cmd" "test/" "src/*.py" "setup.py" "setup.cfg" "buildspec.yml" "artifacts/*"

      # run GPU sagemaker integration tests
      - test_cmd="IGNORE_COVERAGE=- tox -e py36 -- test/integration/sagemaker --region $AWS_DEFAULT_REGION --docker-base-name $ECR_REPO --aws-id $ACCOUNT --framework-version $FRAMEWORK_VERSION --processor gpu --instance-type $GPU_INSTANCE_TYPE --tag $DLC_GPU_TAG"
      - execute-command-if-has-matching-changes "$test_cmd" "test/" "src/*.py" "setup.py" "setup.cfg" "buildspec.yml" "artifacts/*"

    finally:
      # remove ECR image
      - aws ecr batch-delete-image --repository-name $ECR_REPO --region $AWS_DEFAULT_REGION --image-ids imageTag=$DLC_GPU_TAG
